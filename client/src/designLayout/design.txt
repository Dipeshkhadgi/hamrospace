routing(App.jsx with Socket)
import React, { lazy, Suspense, useEffect, useState } from "react";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import TopHeader from "./components/header/TopHeader";
import { ToastContainer } from "react-toastify";
import Register from "./pages/auth/register/Register";
import PageNotFound from "./pages/notFound/PageNotFound";
import { useSelector } from "react-redux";
import ForgotPassword from "./pages/forgotPassword/ForgotPassword";
import VerifyResetOTP from "./pages/auth/verifyResetOTP/VerifyResetOTP";
import ResetPassword from "./pages/auth/resetPassword/ResetPassword";
import VerifyAccount from "./pages/auth/verifyAcount/VerifyAccount";
import SearchLayout from "./pages/searchField/SearchLayout";
import { SocketProvider } from "./socket";
const AddPost = lazy(() => import("./pages/addPost/AddPost"));

// Lazy-loaded pages
const Groups = lazy(() => import("./pages/group/Groups"));
const Login = lazy(() => import("./pages/auth/login/Login"));
const Home = lazy(() => import("./pages/home/Home"));


function App() {
  const { isAuthenticated } = useSelector((state) => state.auth);
  // const [loading, setLoading] = useState(true);

  // useEffect(() => {
  //   const timer = setTimeout(() => {
  //     setLoading(false);
  //   }, 2000);

  //   return () => clearTimeout(timer);
  // }, []);

  // if (loading) {
  //   return <h1>Loading...</h1>;
  // }

  return (
    <>
      <Router>
        <ToastContainer
          position="bottom-left"
          autoClose={5000}
          hideProgressBar={false}
          newestOnTop={false}
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="colored"
          className="custom-toast-container"
        />
        <SocketProvider>
          <Suspense fallback={<h1>Loading...</h1>}>
            <Routes>
              <Route
                path="/"
                element={
                  isAuthenticated ? (
                    <>
                      <TopHeader />
                      <Home />
                    </>
                  ) : (
                    <Login />
                  )
                }
              />
              <Route path="/sign-up" element={<Register />} />
              <Route path="/search-user" element={<SearchLayout />} />
              <Route path="/verify-account" element={<VerifyAccount />} />
              <Route path="/login" element={<Login />} />
              <Route path="/forgot-password" element={<ForgotPassword />} />
              <Route path="/verify-reset-password" element={<VerifyResetOTP />} />
              <Route
                path="/create-post"
                element={
                  <>
                    <TopHeader />
                    <AddPost />
                  </>
                }
              />
              <Route path="/reset-password" element={<ResetPassword />} />
              <Route path="*" element={<PageNotFound />} />
            </Routes>
          </Suspense>
        </SocketProvider>
      </Router>
    </>
  );
}

export default App;
